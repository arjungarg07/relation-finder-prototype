asyncapi: '2.0.0'
info:
  title: Flight Monitor Service
  version: '1.0.0'
  description: |
     provides real-time flight schedule data including up-to-date departure and arrival times, 
     terminal and gate information, flight duration and real-time delay status.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  development:
    url: mqtt://localhost:1883
    protocol: mqtt
channels:
  flight/update:
    description: |
      Provides updates from a subscribed flight
    subscribe:
      summary: Inform about the status of a subscribed flight
      message:
        $ref: '#/components/messages/flightStatus'
  flight/queue:
    description: |
      Queues a flight in order to retrieve status
    publish:
      summary: Subscribe about the status of a given flight
      message:
        $ref: '#/components/messages/flightQueue'
components:
  messages:
    flightStatus:
      summary: Provides flight status on arrival and destination
      payload:
        type: object
        properties:
          user:
            type: object
            properties:
              userName:
                type: string
                minimum: 1
                description: user name
                example: "John Smith"
              phoneNumber:
                type: string
                minimum: 5
                description: phone number where notifications will be received.
                example: "+13451235"
          departure:
            type: object
            properties:
              iataCode:
                type: string
                description: 2 to 3-character IATA carrier code
                example: "MAD"
              scheduledDate:
                type: string
                format: date-time
                description: scheduled datetime of the flight, local to the airport.
                example: "2020-10-20 19:15"
              gate:
                type: string
                description: departure gate
                example: "2D"
              terminal:
                type: string
                description: airport terminal
                example: "4"
          arrival:
            type: object
            properties:
              iataCode:
                type: string
                description: 2 to 3-character IATA carrier code
                example: "MAD"
              scheduledDate:
                type: string
                format: date-time
                description: scheduled datetime of the flight, local to the airport.
                example: "2020-10-20 19:15"
              gate:
                type: string
                description: departure gate
                example: "2D"
              terminal:
                type: string
                description: airport terminal
                example: "4"
    flightQueue:
      summary: Requets to queue a flight to be monitored
      payload:
        type: object
        properties:
          flight:
            type: object
            properties:
              carrierCode:
                type: string
                description: 2 to 3-character IATA carrier code
                example: "LH"
              flightNumber:
                type: integer
                minimum: 1
                description: 1 to 4-digit number of the flight
                example: "193"
              scheduledDepartureDate:
                type: string
                format: date-time
                description: scheduled departure date of the flight, local to the departure airport.
                example: "2020-10-20"
          user:
            type: object
            properties:
              userName:
                type: string
                minimum: 1
                description: user name
                example: "John Smith"
              phoneNumber:
                type: string
                minimum: 5
                description: phone number where notifications will be received.
                example: "+13451235"

